name: MERN CI/CD Pipeline

on:
  push:
    branches:
      - cicd-creation  # Trigger when changes are pushed to the main branch
  pull_request:
    branches:
      - cicd-creation  # Trigger on pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2
      with:
        version: latest

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Node.js (Backend)
      uses: actions/setup-node@v2
      with:
        node-version: '20.2.0'  # Use the appropriate Node.js version for your project

    - name: Install Backend Dependencies
      run: |
        cd backend  # Assuming your backend is in a 'backend' directory
        npm install

    - name: Run Backend Tests
      run: |
        cd backend
        npm test

    - name: Set up React (Frontend)
      run: |
        cd aiworkspace  # Assuming your frontend is in a 'frontend' directory
        npm install

    - name: Run Frontend Tests
      run: |
        cd aiworkspace
        npm test
    
        - name: Build Docker Images with Docker Compose
        run: |
          docker-compose -f docker-compose.yml build  # Build the Docker images for both services
  
    - name: Push Docker Images to Docker Hub
      run: |
        docker-compose -f docker-compose.yml push  # Push the images to Docker Hub
  
    - name: Deploy to OnRender (Backend)
      run: |
        curl -X POST https://api.onrender.com/v1/services/your-backend-service-id/deploy \
          -H "Authorization: Bearer ${{ secrets.ONRENDER_API_KEY }}"
  
    - name: Deploy to OnRender (Frontend)
      run: |
        curl -X POST https://api.onrender.com/v1/services/your-frontend-service-id/deploy \
          -H "Authorization: Bearer ${{ secrets.ONRENDER_API_KEY }}"
